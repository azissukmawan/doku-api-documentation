{
  "openapi": "3.0.0",
  "info": {
    "title": "DOKU Payment API",
    "version": "1.0.0",
    "description": "Backend Integration to initiate payment"
  },
  "servers": [
    {
      "url": "https://api-sandbox.doku.com/checkout/v1/payment",
      "description": "Sandbox environment"
    },
    {
      "url": "https://api.doku.com/checkout/v1/payment",
      "description": "Production environment"
    }
  ],
  "paths": {
    "/checkout/v1/payment": {
      "post": {
        "summary": "Initiate Payment",
        "description": "Backend Integration to initiate payment",
        "operationId": "Initiate Payment",
        "parameters": [
          {
            "name": "Client-Id",
            "in": "header",
            "description": "Client ID retrieved from DOKU Back Office.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MCH-0001-10791114622547"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Unique random string (max 128 characters) generated from merchant side to protect duplicate requests.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "fdb69f47-96da-499d-acec-7cdc318ab2fe"
            }
          },
          {
            "name": "Request-Timestamp",
            "in": "header",
            "description": "Timestamp of the request in ISO8601 UTC+0 format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2020-08-11T08:45:42Z"
            }
          },
          {
            "name": "Signature",
            "in": "header",
            "description": "Security parameter generated on the merchant backend to ensure the request is valid.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "HMACSHA256=1jap2tpgvWt83tG4J7IhEwUrwmMt71OaIk0oL0e6sPM="
            }
          }
        ],
        "requestBody": {
          "description": "Here is the sample of request body to obtain payment.url, you can send a simple request for a basic payment page and you can send the parameter according to your needs",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BasicPaymentRequest"
                  },
                  {
                    "$ref": "#/components/schemas/FullPaymentRequest"
                  }
                ]
              },
              "examples": {
                "BasicRequest": {
                  "summary": "Basic Payment Request",
                  "value": {
                    "order": {
                      "amount": 20000,
                      "invoice_number": "INV-20210231-0001"
                    },
                    "payment": {
                      "payment_due_date": 60
                    }
                  }
                },
                "FullRequest": {
                  "summary": "Full Payment Request",
                  "value": {
                    "order": {
                      "amount": 80000,
                      "invoice_number": "INV-{{$timestamp}}",
                      "currency": "IDR",
                      "callback_url": "http://merchantcallbackurl.domain/",
                      "callback_url_cancel": "https://merchantcallbackurl-cancel.domain",
                      "callback_url_result": "https://merchantcallbackurl-cancel.domain",
                      "language": "EN",
                      "auto_redirect": true,
                      "disable_retry_payment": true,
                      "line_items": [
                        {
                          "id": "001",
                          "name": "Fresh flowers",
                          "quantity": 1,
                          "price": 40000,
                          "sku": "FF01",
                          "category": "gift-and-flowers",
                          "url": "http://item-url.domain/",
                          "image_url": "http://image-url.domain/",
                          "type": "ABC"
                        },
                        {
                          "id": "002",
                          "name": "T-shirt",
                          "quantity": 1,
                          "price": 40000,
                          "sku": "T01",
                          "category": "clothing",
                          "url": "http://item-url.domain/",
                          "image_url": "http://image-url.domain/",
                          "type": "ABC"
                        }
                      ]
                    },
                    "payment": {
                      "payment_due_date": 60,
                      "type": "SALE",
                      "payment_method_types": [
                        "VIRTUAL_ACCOUNT_BCA",
                        "VIRTUAL_ACCOUNT_BANK_MANDIRI",
                        "VIRTUAL_ACCOUNT_BANK_SYARIAH_MANDIRI",
                        "VIRTUAL_ACCOUNT_DOKU",
                        "VIRTUAL_ACCOUNT_BRI",
                        "VIRTUAL_ACCOUNT_BNI",
                        "VIRTUAL_ACCOUNT_BANK_PERMATA",
                        "VIRTUAL_ACCOUNT_BANK_CIMB",
                        "VIRTUAL_ACCOUNT_BANK_DANAMON",
                        "ONLINE_TO_OFFLINE_ALFA",
                        "CREDIT_CARD",
                        "DIRECT_DEBIT_BRI",
                        "EMONEY_SHOPEEPAY",
                        "EMONEY_OVO",
                        "EMONEY_DANA",
                        "QRIS",
                        "PEER_TO_PEER_AKULAKU",
                        "PEER_TO_PEER_KREDIVO",
                        "PEER_TO_PEER_INDODANA"
                      ]
                    },
                    "customer": {
                      "id": "JC-01",
                      "name": "Zolanda",
                      "last_name": "Anggraeni",
                      "phone": "628121212121",
                      "email": "zolanda@example.com",
                      "address": "taman setiabudi",
                      "postcode": "120129",
                      "state": "Jakarta",
                      "city": "Jakarta Selatan",
                      "country": "ID"
                    },
                    "shipping_address": {
                      "first_name": "Joe",
                      "last_name": "Doe",
                      "address": "Jalan DOKU no 15",
                      "city": "Jakarta",
                      "postal_code": "11923",
                      "phone": "081312345678",
                      "country_code": "IDN"
                    },
                    "billing_address": {
                      "first_name": "Joe",
                      "last_name": "Doe",
                      "address": "Jalan DOKU no 15",
                      "city": "Jakarta",
                      "postal_code": "11923",
                      "phone": "081312345678",
                      "country_code": "IDN"
                    },
                    "additional_info": {
                      "allow_tenor": [0, 3, 6, 12],
                      "doku_wallet_notify_url": "https://dw-notification.merchantdomain",
                      "override_notification_url": "https://another.example.com/payments/notifications"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicPaymentResponse"
                    },
                    {
                      "$ref": "#/components/schemas/FullPaymentResponse"
                    }
                  ]
                },
                "examples": {
                  "BasicResponse": {
                    "summary": "Basic Payment Response",
                    "value": {
                      "message": ["SUCCESS"],
                      "response": {
                        "order": {
                          "amount": "20000",
                          "invoice_number": "INV-20210231-0001",
                          "currency": "IDR",
                          "session_id": "2ebffd22d23e436895ce5c38f7ddcf86"
                        },
                        "payment": {
                          "payment_method_types": [
                            "JENIUS_PAY",
                            "ONLINE_TO_OFFLINE_ALFA",
                            "OCTO_CLICKS",
                            "PEER_TO_PEER_KREDIVO",
                            "VIRTUAL_ACCOUNT_BCA",
                            "CREDIT_CARD",
                            "EMONEY_OVO",
                            "ONLINE_TO_OFFLINE_INDOMARET",
                            "EMONEY_DOKU",
                            "VIRTUAL_ACCOUNT_BANK_MANDIRI",
                            "EPAY_BRI",
                            "PEER_TO_PEER_INDODANA",
                            "VIRTUAL_ACCOUNT_BRI",
                            "EMONEY_LINKAJA",
                            "EMONEY_SHOPEE_PAY",
                            "VIRTUAL_ACCOUNT_BNI",
                            "VIRTUAL_ACCOUNT_BANK_PERMATA",
                            "VIRTUAL_ACCOUNT_DOKU",
                            "VIRTUAL_ACCOUNT_BANK_CIMB",
                            "VIRTUAL_ACCOUNT_BANK_DANAMON",
                            "VIRTUAL_ACCOUNT_BANK_SYARIAH_MANDIRI",
                            "VIRTUAL_ACCOUNT_MAYBANK",
                            "DIRECT_DEBIT_CIMB",
                            "EMONEY_DANA",
                            "DIRECT_DEBIT_BRI",
                            "DIRECT_DEBIT_ALLO",
                            "PEER_TO_PEER_BRI_CERIA",
                            "VIRTUAL_ACCOUNT_BNC",
                            "PERMATA_NET",
                            "KLIKPAY_BCA",
                            "VIRTUAL_ACCOUNT_BTN",
                            "DANAMON_ONLINE_BANKING",
                            "VIRTUAL_ACCOUNT_SINARMAS"
                          ],
                          "payment_due_date": 60,
                          "token_id": "2ebffd22d23e436895ce5c38f7ddcf8620244712094712362",
                          "url": "https://sandbox.doku.com/checkout-link-v2/2ebffd22d23e436895ce5c38f7ddcf8620244712094712362",
                          "expired_date": "20240712104711"
                        },
                        "additional_info": {
                          "origin": {
                            "product": "CHECKOUT",
                            "system": "mid-jokul-checkout-system",
                            "apiFormat": "JOKUL",
                            "source": "direct"
                          }
                        },
                        "uuid": 2225240712094712339107164227041411929328,
                        "headers": {
                          "request_id": "ed06da30-bbbc-4e90-a3c7-390c24476cb9",
                          "signature": "HMACSHA256=cyoua5cA6DR5mG/4vw3ice48KjCX+CGdLdSfMumJUuo=",
                          "date": "2024-07-12T02:47:11Z",
                          "client_id": "BRN-0214-1714016624673"
                        }
                      }
                    }
                  },
                  "FullResponse": {
                    "summary": "Full Payment Response",
                    "value": {
                      "message": ["SUCCESS"],
                      "response": {
                        "order": {
                          "amount": "80000",
                          "invoice_number": "INV-1720752332",
                          "currency": "IDR",
                          "session_id": "5f6304ca900144c7a4fcf802ad6c0898",
                          "callback_url": "http://merchantcallbackurl.domain/",
                          "callback_url_cancel": "https://merchantcallbackurl-cancel.domain",
                          "callback_url_result": "https://merchantcallbackurl-cancel.domain",
                          "line_items": [
                            {
                              "name": "Fresh flowers",
                              "quantity": 1,
                              "price": "40000",
                              "sku": "FF01",
                              "category": "gift-and-flowers",
                              "url": "http://item-url.domain/",
                              "image_url": "http://image-url.domain/",
                              "type": "ABC"
                            },
                            {
                              "name": "T-shirt",
                              "quantity": 1,
                              "price": "40000",
                              "sku": "T01",
                              "category": "clothing",
                              "url": "http://item-url.domain/",
                              "image_url": "http://image-url.domain/",
                              "type": "ABC"
                            }
                          ],
                          "language": "EN",
                          "disable_retry_payment": true,
                          "auto_redirect": true
                        },
                        "payment": {
                          "payment_method_types": [
                            "EMONEY_OVO",
                            "ONLINE_TO_OFFLINE_ALFA",
                            "PEER_TO_PEER_KREDIVO",
                            "VIRTUAL_ACCOUNT_BCA",
                            "CREDIT_CARD",
                            "VIRTUAL_ACCOUNT_BANK_MANDIRI",
                            "VIRTUAL_ACCOUNT_BRI",
                            "PEER_TO_PEER_INDODANA",
                            "VIRTUAL_ACCOUNT_BNI",
                            "VIRTUAL_ACCOUNT_BANK_PERMATA",
                            "VIRTUAL_ACCOUNT_DOKU",
                            "VIRTUAL_ACCOUNT_BANK_CIMB",
                            "VIRTUAL_ACCOUNT_BANK_DANAMON",
                            "VIRTUAL_ACCOUNT_BANK_SYARIAH_MANDIRI",
                            "EMONEY_DANA",
                            "DIRECT_DEBIT_BRI"
                          ],
                          "payment_due_date": 60,
                          "token_id": "5f6304ca900144c7a4fcf802ad6c089820244512094533497",
                          "url": "https://sandbox.doku.com/checkout-link-v2/5f6304ca900144c7a4fcf802ad6c089820244512094533497",
                          "expired_date": "20240712104531"
                        },
                        "customer": {
                          "id": "JC-01",
                          "state": "Jakarta",
                          "city": "Jakarta Selatan",
                          "postcode": "120129",
                          "email": "zolanda@example.com",
                          "phone": "628121212121",
                          "name": "Zolanda",
                          "last_name": "Anggraeni",
                          "address": "taman setiabudi",
                          "country": "ID"
                        },
                        "additional_info": {
                          "allow_tenor": [0, 3, 6, 12],
                          "doku_wallet_notify_url": "https://dw-notification.merchantdomain/",
                          "origin": {
                            "product": "CHECKOUT",
                            "system": "mid-jokul-checkout-system",
                            "source": "direct",
                            "apiFormat": "JOKUL"
                          },
                          "line_items": [
                            {
                              "quantity": 1,
                              "price": "40000",
                              "image_url": "http://image-url.domain/",
                              "name": "Fresh flowers",
                              "sku": "FF01",
                              "category": "gift-and-flowers",
                              "type": "ABC",
                              "url": "http://item-url.domain/"
                            },
                            {
                              "quantity": 1,
                              "price": "40000",
                              "image_url": "http://image-url.domain/",
                              "name": "T-shirt",
                              "sku": "T01",
                              "category": "clothing",
                              "type": "ABC",
                              "url": "http://item-url.domain/"
                            }
                          ],
                          "override_notification_url": "https://another.example.com/payments/notifications"
                        },
                        "uuid": 2225240712094533483107164227326411817850,
                        "headers": {
                          "request_id": "0521fe4d-bd69-4626-9c5c-fc484b81b8bc",
                          "signature": "HMACSHA256=eT5aE//GhxqrRvx/XHdV/z2KezkyD6V3EJPHTEv4x8g=",
                          "date": "2024-07-12T02:45:31Z",
                          "client_id": "BRN-0214-1714016624673"
                        },
                        "shipping_address": {
                          "address": "Jalan DOKU no 15",
                          "city": "Jakarta",
                          "phone": "081312345678",
                          "first_name": "Joe",
                          "last_name": "Doe",
                          "postal_code": "11923",
                          "country_code": "IDN"
                        },
                        "billing_address": {
                          "address": "Jalan DOKU no 15",
                          "city": "Jakarta",
                          "phone": "081312345678",
                          "first_name": "Joe",
                          "last_name": "Doe",
                          "postal_code": "11923",
                          "country_code": "IDN"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error_messages": [
                    "order.invoice_number must be filled",
                    "order.amount must greater than 0"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BasicPaymentRequest": {
        "type": "object",
        "description": "This basic request only could be implement for selected payment method, such as :\n1. Virtual Account\n2. Credit Card\n 3. QRIS\n 4. Convenience Store\n 5. E-money (OVO and Linkaja)",
        "properties": {
          "order": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Order amount in IDR currency and without decimal.",
                "maxLength": 12,
                "example": 20000
              },
              "invoice_number": {
                "type": "string",
                "description": "Unique identifier generated by merchant to identify the order.\nNotes: If you have Credit Card channel activated, the maximum length is 30 chars due to the acquirer's requirements.\nIf you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol on Invoice number value.",
                "maxLength": 64,
                "example": "INV-20210231-0001"
              }
            },
            "required": ["amount", "invoice_number"]
          },
          "payment": {
            "type": "object",
            "properties": {
              "payment_due_date": {
                "type": "number",
                "description": "The payment due date of the checkout page in minutes.",
                "default": 60,
                "maxLength": 6,
                "example": 60
              }
            }
          }
        },
        "required": ["order"]
      },
      "FullPaymentRequest": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/ShippingAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "additional_info": {
            "$ref": "#/components/schemas/AdditionalInfo"
          }
        },
        "required": ["order", "payment"]
      },
      "BasicPaymentResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Message will display the result of the request.",
            "example": ["SUCCESS"]
          },
          "response": {
            "type": "object",
            "properties": {
              "order": {
                "required": ["amount", "invoice_number"],
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Order amount in IDR currency and without decimal.",
                    "example": 80000,
                    "maxLength": 12
                  },
                  "invoice_number": {
                    "type": "string",
                    "description": "Unique identifier generated by merchant to identify the order.\n except credit card which 30 chars only.\nIf you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol on Invoice number value.",
                    "example": "INV-1720752332",
                    "maxLength": 64
                  },
                  "currency": {
                    "type": "string",
                    "description": "3 alphabetic currency code ISO 4217.",
                    "example": "IDR",
                    "maxLength": 3,
                    "default": "IDR"
                  },
                  "session_id": {
                    "type": "string",
                    "description": "Unique session ID generated by DOKU",
                    "example": "5f6304ca900144c7a4fcf802ad6c0898"
                  }
                }
              },
              "payment": {
                "required": [
                  "payment_due_date",
                  "token_id",
                  "url",
                  "expired_date"
                ],
                "properties": {
                  "payment_method_types": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Payment method that will shown to users in Checkout Page.\nIf you wish to showcase all available payment methods, simply omit sending this parameter, and all options will be visible.\nAlternatively, if you prefer to direct users to a specific payment method, include this parameter and specify the desired payment method by filling in its corresponding value.",
                    "externalDocs": {
                      "description": "The value are listed",
                      "url": "https://developers.doku.com/accept-payment/doku-checkout/supported-payment-methods"
                    },
                    "example": [
                      "VIRTUAL_ACCOUNT_BCA",
                      "VIRTUAL_ACCOUNT_BANK_MANDIRI",
                      "VIRTUAL_ACCOUNT_BANK_SYARIAH_MANDIRI",
                      "VIRTUAL_ACCOUNT_DOKU",
                      "VIRTUAL_ACCOUNT_BRI",
                      "VIRTUAL_ACCOUNT_BNI",
                      "VIRTUAL_ACCOUNT_BANK_PERMATA",
                      "VIRTUAL_ACCOUNT_BANK_CIMB",
                      "VIRTUAL_ACCOUNT_BANK_DANAMON",
                      "ONLINE_TO_OFFLINE_ALFA",
                      "CREDIT_CARD",
                      "DIRECT_DEBIT_BRI",
                      "EMONEY_SHOPEEPAY",
                      "EMONEY_OVO",
                      "EMONEY_DANA",
                      "QRIS",
                      "PEER_TO_PEER_AKULAKU",
                      "PEER_TO_PEER_KREDIVO",
                      "PEER_TO_PEER_INDODANA"
                    ]
                  },
                  "payment_due_date": {
                    "type": "number",
                    "description": "The payment due date of the checkout page in minutes.",
                    "default": "60 minutes",
                    "maxLength": 6
                  },
                  "token_id": {
                    "type": "string",
                    "description": "Token generated by DOKU for the Checkout Page",
                    "example": "5f6304ca900144c7a4fcf802ad6c089820244512094533497"
                  },
                  "url": {
                    "type": "string",
                    "description": "Checkout page URL to display for the customer",
                    "example": "https://sandbox.doku.com/checkout-link-v2/5f6304ca900144c7a4fcf802ad6c089820244512094533497"
                  },
                  "expired_date": {
                    "type": "string",
                    "description": "Date time of payment page will be expired with the format of yyyyMMddHHmmss. The expired date uses UTC+7 time. Use this to set the expiry order on merchant side",
                    "example": "20240712104531"
                  }
                }
              },
              "additional_info": {
                "$ref": "#/components/schemas/AdditionalInfo"
              },
              "uuid": {
                "type": "string",
                "description": "Unique number generated by DOKU.",
                "example": "2225240712094533483107164227326411817850"
              },
              "headers": {
                "type": "object",
                "properties": {
                  "request_id": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "0521fe4d-bd69-4626-9c5c-fc484b81b8bc"
                  },
                  "signature": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "HMACSHA256=eT5aE//GhxqrRvx/XHdV/z2KezkyD6V3EJPHTEv4x8g="
                  },
                  "date": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "2024-07-12T02:45:31Z"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "BRN-0214-1714016624673"
                  }
                }
              }
            }
          }
        },
        "required": ["message"]
      },
      "FullPaymentResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Message will display the result of the request.",
            "example": ["SUCCESS"]
          },
          "response": {
            "type": "object",
            "properties": {
              "order": {
                "required": ["amount", "invoice_number"],
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Order amount in IDR currency and without decimal.",
                    "example": 80000,
                    "maxLength": 12
                  },
                  "invoice_number": {
                    "type": "string",
                    "description": "Unique identifier generated by merchant to identify the order.\n except credit card which 30 chars only.\nIf you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol on Invoice number value.",
                    "example": "INV-1720752332",
                    "maxLength": 64
                  },
                  "currency": {
                    "type": "string",
                    "description": "3 alphabetic currency code ISO 4217.",
                    "example": "IDR",
                    "maxLength": 3,
                    "default": "IDR"
                  },
                  "session_id": {
                    "type": "string",
                    "description": "Unique session ID generated by DOKU",
                    "example": "5f6304ca900144c7a4fcf802ad6c0898"
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "The URL for the 'Back to Merchant' button.",
                    "example": "http://merchantcallbackurl.domain/",
                    "required": "Conditional,Mandatory for Payment Methods : Jenius."
                  },
                  "callback_url_cancel": {
                    "type": "string",
                    "description": "The URL specified for merchant redirection in the event of order cancellation.",
                    "example": "https://merchantcallbackurl-cancel.domain",
                    "required": "Conditional, Currently only available for payment methods : Indodana"
                  },
                  "language": {
                    "type": "string",
                    "description": "Default language shown when redirect to checkout page",
                    "example": "EN",
                    "maxLength": 2
                  },
                  "auto_redirect": {
                    "type": "boolean",
                    "description": "When set to true, the transaction result page redirects to the callback URL; otherwise, it redirects to the payment result page.",
                    "example": true
                  },
                  "disable_retry_payment": {
                    "type": "boolean",
                    "description": "When set to true, the customer cannot retry payment on the result page.",
                    "example": true,
                    "required": "Conditional, Only applied for payment methods : Credit Card, DOKU Wallet, Akulaku, OVO, ShopeePay"
                  },
                  "line_items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the product item.\nNote:\nIf you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol.",
                        "example": "Fresh flowers",
                        "required": "Conditional, Mandatory for Payment Methods : Jenius, Kredivo, Indodana, KKI.",
                        "maxLength": 255
                      },
                      "quantity": {
                        "type": "number",
                        "description": "Quantity of the product item. Note\n If you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol.",
                        "example": 1,
                        "required": "Conditional, Mandatory for Payment Methods : Jenius, Kredivo, Akulaku, Indodana, KKI."
                      },
                      "price": {
                        "type": "number",
                        "description": "Price of the product item. Total price and quantity must match with the \border.amount\b. Note If you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol.",
                        "example": 40000,
                        "required": "Conditional, Mandatory for Payment Methods : Jenius, Kredivo, Akulaku, Indodana, KKI."
                      },
                      "sku": {
                        "type": "string",
                        "description": "SKU of the product item.",
                        "example": "FF01",
                        "required": "Conditional Mandatory for Payment Methods : Akulaku, Kredivo, Indodana."
                      },
                      "category": {
                        "type": "string",
                        "description": "Category of the product item.",
                        "externalDocs": {
                          "description": "For Indodana, the category should be based on these list.",
                          "url": "https://developers.doku.com/accept-payment/doku-checkout/integration-guide/backend-integration#list-category"
                        },
                        "example": "gift-and-flowers",
                        "required": "Conditional, Mandatory for Payment Methods : Akulaku, Kredivo, Indodana."
                      },
                      "url": {
                        "type": "string",
                        "description": "URL to the product item on merchant site. ",
                        "example": "http://item-url.domain/",
                        "required": "Conditional, Mandatory for Payment Methods : Kredivo and Indodana."
                      },
                      "image_url": {
                        "type": "string",
                        "description": "URL the image of the product item on merchant site.",
                        "example": "http://image-url.domain/",
                        "required": "Conditional, Mandatory for Payment Methods : Indodana."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the item in this transaction.",
                        "example": "ABC",
                        "required": "Conditional, Mandatory for Payment Methods : Indodana."
                      }
                    }
                  }
                }
              },
              "payment": {
                "required": [
                  "payment_due_date",
                  "token_id",
                  "url",
                  "expired_date"
                ],
                "properties": {
                  "payment_method_types": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Payment method that will shown to users in Checkout Page.\nIf you wish to showcase all available payment methods, simply omit sending this parameter, and all options will be visible.\nAlternatively, if you prefer to direct users to a specific payment method, include this parameter and specify the desired payment method by filling in its corresponding value.",
                    "externalDocs": {
                      "description": "The value are listed",
                      "url": "https://developers.doku.com/accept-payment/doku-checkout/supported-payment-methods"
                    },
                    "example": [
                      "VIRTUAL_ACCOUNT_BCA",
                      "VIRTUAL_ACCOUNT_BANK_MANDIRI",
                      "VIRTUAL_ACCOUNT_BANK_SYARIAH_MANDIRI",
                      "VIRTUAL_ACCOUNT_DOKU",
                      "VIRTUAL_ACCOUNT_BRI",
                      "VIRTUAL_ACCOUNT_BNI",
                      "VIRTUAL_ACCOUNT_BANK_PERMATA",
                      "VIRTUAL_ACCOUNT_BANK_CIMB",
                      "VIRTUAL_ACCOUNT_BANK_DANAMON",
                      "ONLINE_TO_OFFLINE_ALFA",
                      "CREDIT_CARD",
                      "DIRECT_DEBIT_BRI",
                      "EMONEY_SHOPEEPAY",
                      "EMONEY_OVO",
                      "EMONEY_DANA",
                      "QRIS",
                      "PEER_TO_PEER_AKULAKU",
                      "PEER_TO_PEER_KREDIVO",
                      "PEER_TO_PEER_INDODANA"
                    ]
                  },
                  "payment_due_date": {
                    "type": "number",
                    "description": "The payment due date of the checkout page in minutes.",
                    "default": "60 minutes",
                    "maxLength": 6
                  },
                  "token_id": {
                    "type": "string",
                    "description": "Token generated by DOKU for the Checkout Page",
                    "example": "5f6304ca900144c7a4fcf802ad6c089820244512094533497"
                  },
                  "url": {
                    "type": "string",
                    "description": "Checkout page URL to display for the customer",
                    "example": "https://sandbox.doku.com/checkout-link-v2/5f6304ca900144c7a4fcf802ad6c089820244512094533497"
                  },
                  "expired_date": {
                    "type": "string",
                    "description": "Date time of payment page will be expired with the format of yyyyMMddHHmmss. The expired date uses UTC+7 time. Use this to set the expiry order on merchant side",
                    "example": "20240712104531"
                  }
                }
              },
              "customer": {
                "$ref": "#/components/schemas/Customer"
              },
              "additional_info": {
                "$ref": "#/components/schemas/AdditionalInfo"
              },
              "uuid": {
                "type": "string",
                "description": "Unique number generated by DOKU.",
                "example": "2225240712094533483107164227326411817850"
              },
              "headers": {
                "type": "object",
                "properties": {
                  "request_id": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "0521fe4d-bd69-4626-9c5c-fc484b81b8bc"
                  },
                  "signature": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "HMACSHA256=eT5aE//GhxqrRvx/XHdV/z2KezkyD6V3EJPHTEv4x8g="
                  },
                  "date": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "2024-07-12T02:45:31Z"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Same as the request.",
                    "example": "BRN-0214-1714016624673"
                  }
                }
              },
              "shipping_address": {
                "$ref": "#/components/schemas/ShippingAddress"
              },
              "billing_address": {
                "$ref": "#/components/schemas/BillingAddress"
              }
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Order amount in IDR currency and without decimal.",
            "example": 80000,
            "maxLength": 12
          },
          "invoice_number": {
            "type": "string",
            "description": "Unique identifier generated by merchant to identify the order.\n except credit card which 30 chars only.\nIf you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol on Invoice number value.",
            "example": "INV-1720752332",
            "maxLength": 64
          },
          "currency": {
            "type": "string",
            "description": "3 alphabetic currency code ISO 4217.",
            "example": "IDR",
            "maxLength": 3,
            "default": "IDR"
          },
          "callback_url": {
            "type": "string",
            "description": "The URL for the 'Back to Merchant' button.",
            "example": "http://merchantcallbackurl.domain/",
            "required": "Conditional,Mandatory for Payment Methods : Jenius."
          },
          "callback_url_cancel": {
            "type": "string",
            "description": "The URL specified for merchant redirection in the event of order cancellation.",
            "example": "https://merchantcallbackurl-cancel.domain",
            "required": "Conditional, Currently only available for payment methods : Indodana"
          },
          "callback_url_result": {
            "type": "string",
            "description": "The URL designated for button \"Back to merchant\" in result page. ",
            "example": "https://merchantcallbackurl-cancel.domain"
          },
          "language": {
            "type": "string",
            "description": "Default language shown when redirect to checkout page",
            "example": "EN",
            "maxLength": 2
          },
          "auto_redirect": {
            "type": "boolean",
            "description": "When set to true, the transaction result page redirects to the callback URL; otherwise, it redirects to the payment result page.",
            "example": true
          },
          "disable_retry_payment": {
            "type": "boolean",
            "description": "When set to true, the customer cannot retry payment on the result page.",
            "example": true,
            "required": "Conditional, Only applied for payment methods : Credit Card, DOKU Wallet, Akulaku, OVO, ShopeePay"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          }
        },
        "required": ["amount", "invoice_number", "auto_redirect"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "payment_due_date": {
            "type": "number",
            "description": "The payment due date of the checkout page in minutes.",
            "default": "60 minutes",
            "maxLength": 6
          },
          "type": {
            "type": "string",
            "description": "Possible values: 'SALE', 'INSTALLMENT', 'AUTHORIZE'. \nIf you set the type as Authorize, the status will be stated as On Hold. The status will change, if the customer do payment. Only applicable in Credit Card.",
            "example": "SALE"
          },
          "payment_method_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Payment method that will shown to users in Checkout Page.\nIf you wish to showcase all available payment methods, simply omit sending this parameter, and all options will be visible.\nAlternatively, if you prefer to direct users to a specific payment method, include this parameter and specify the desired payment method by filling in its corresponding value.",
            "externalDocs": {
              "description": "The value are listed",
              "url": "https://developers.doku.com/accept-payment/doku-checkout/supported-payment-methods"
            },
            "example": [
              "VIRTUAL_ACCOUNT_BCA",
              "VIRTUAL_ACCOUNT_BANK_MANDIRI",
              "VIRTUAL_ACCOUNT_BANK_SYARIAH_MANDIRI",
              "VIRTUAL_ACCOUNT_DOKU",
              "VIRTUAL_ACCOUNT_BRI",
              "VIRTUAL_ACCOUNT_BNI",
              "VIRTUAL_ACCOUNT_BANK_PERMATA",
              "VIRTUAL_ACCOUNT_BANK_CIMB",
              "VIRTUAL_ACCOUNT_BANK_DANAMON",
              "ONLINE_TO_OFFLINE_ALFA",
              "CREDIT_CARD",
              "DIRECT_DEBIT_BRI",
              "EMONEY_SHOPEEPAY",
              "EMONEY_OVO",
              "EMONEY_DANA",
              "QRIS",
              "PEER_TO_PEER_AKULAKU",
              "PEER_TO_PEER_KREDIVO",
              "PEER_TO_PEER_INDODANA"
            ]
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique customer identifier generated by merchant.\nAllowed chars: alphabetic, numeric, special chars",
            "example": "JC-01",
            "maxLength": 50,
            "required": "Conditional, mandatory to enable tokenized payments (BRI Direct Debit, Allobank, Credit Card tokenization) and Akulaku Paylater."
          },
          "name": {
            "type": "string",
            "description": "Customer name.\nAllowed chars: alphabetic",
            "example": "Zolanda",
            "maxLength": 255,
            "required": "Conditional, mandatory for payment methods Jenius, Akulaku, Indodana"
          },
          "last_name": {
            "type": "string",
            "description": "Customer last name.",
            "example": "Anggraeni",
            "maxLength": 16
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number. Format: {calling_code}{phone_number}.",
            "example": "628121212121",
            "required": "Conditional",
            "maxLength": 16
          },
          "email": {
            "type": "string",
            "description": "Customer email.\nAllowed chars: alphabetic, numeric, special chars",
            "example": "zolanda@example.com",
            "maxLength": 128,
            "required": "Conditional, mandatory for payment method Indodana"
          },
          "address": {
            "type": "string",
            "description": "Customer address. Allowed chars: alphabetic, numeric, special chars",
            "example": "taman setiabudi",
            "maxLength": 400,
            "required": "Conditional, mandatory for payment method Akulaku"
          },
          "postcode": {
            "type": "string",
            "description": "Customer address' post code.",
            "example": "120129",
            "required": "Conditional, mandatory for payment method Akulaku"
          },
          "state": {
            "type": "string",
            "description": "Customer state or province.",
            "example": "Jakarta",
            "required": "Conditional, mandatory for payment method Akulaku"
          },
          "city": {
            "type": "string",
            "description": "Customer address' city.",
            "example": "Jakarta Selatan",
            "required": "Conditional, mandatory for payment method Akulaku"
          },
          "country": {
            "type": "string",
            "description": "2 alphabetic country code ISO 3166-1.\nAllowed chars: alphabetic",
            "example": "ID",
            "maxLength": 2
          }
        }
      },
      "ShippingAddress": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Customer's first name used as shipping address.",
            "example": "Joe",
            "required": "Conditional, mandatory for payment method Kredivo and Indodana"
          },
          "last_name": {
            "type": "string",
            "description": "Customer's last name used as shipping address.",
            "example": "Doe"
          },
          "address": {
            "type": "string",
            "description": "Customer's address used as shipping address.",
            "example": "Jalan DOKU no 15",
            "required": "Conditional, mandatory for payment method Kredivo and Indodana"
          },
          "city": {
            "type": "string",
            "description": "City of customer's shipping address.",
            "example": "Jakarta",
            "required": "Conditional, mandatory for payment method Kredivo and Indodana"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code of customer's shipping address.",
            "example": "11923",
            "required": "Conditional, mandatory for payment method Kredivo and Indodana"
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone used as shipping address.",
            "example": "081312345678",
            "required": "Conditional, mandatory for payment method Kredivo and Indodana"
          },
          "country_code": {
            "type": "string",
            "description": "Country of customer's shipping address.",
            "example": "IDN",
            "required": "Conditional, mandatory for payment method Kredivo and Indodana"
          }
        }
      },
      "BillingAddress": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Customer's first name used as billing address.",
            "example": "Joe",
            "required": "Conditional, mandatory for payment method   Indodana"
          },
          "last_name": {
            "type": "string",
            "description": "Customer's last name used as billing address.",
            "example": "Doe",
            "required": "Conditional, mandatory for payment method   Indodana"
          },
          "address": {
            "type": "string",
            "description": "Customer's address used as billing address.",
            "example": "Jalan DOKU no 15",
            "required": "Conditional, mandatory for payment method   Indodana"
          },
          "city": {
            "type": "string",
            "description": "City of customer's billing address.",
            "example": "Jakarta",
            "required": "Conditional, mandatory for payment method   Indodana"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code of customer's billing address.",
            "example": "11923",
            "required": "Conditional, mandatory for payment method   Indodana"
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone used as billing address.",
            "example": "081312345678",
            "required": "Conditional, mandatory for payment method   Indodana"
          },
          "country_code": {
            "type": "string",
            "description": "Country of customer's billing address.",
            "example": "IDN",
            "required": "Conditional, mandatory for payment method   Indodana"
          }
        }
      },
      "AdditionalInfo": {
        "type": "object",
        "properties": {
          "allow_tenor": {
            "type": "number",
            "description": "The transaction exclusively supports installment tenors as per its current configuration. The allowed values are 0,3,6,12. To hide the \"no installment\" option, refrain from inputting 0 (zero) in the parameter."
          },
          "doku_wallet_notify_url": {
            "type": "string",
            "description": "Notification URL set in this parameter.",
            "example": "https://dw-notification.merchantdomain",
            "required": "Conditional, only for payment method DOKU Wallet"
          },
          "override_notification_url": {
            "type": "string",
            "description": "This parameter is intended to override the configured Notification URL with another URL.",
            "externalDocs": {
              "description": "Click here for more information.",
              "url": "https://developers.doku.com/getting-started-with-doku-api/notification/override-notification-url"
            },
            "example": "https://another.example.com/payments/notifications"
          }
        }
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Item ID of the item in this transaction.\nNote :\nIf you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol on Invoice number value.",
            "example": "001",
            "maxLength": 64,
            "required": "Conditional Mandatory for Payment Methods : Akulaku, Kredivo, Indodana"
          },
          "name": {
            "type": "string",
            "description": "Name of the product item.\nNote:\nIf you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol.",
            "example": "Fresh flowers",
            "required": "Conditional, Mandatory for Payment Methods : Jenius, Kredivo, Indodana, KKI.",
            "maxLength": 255
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the product item. Note\n If you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol.",
            "example": 1,
            "required": "Conditional, Mandatory for Payment Methods : Jenius, Kredivo, Akulaku, Indodana, KKI."
          },
          "price": {
            "type": "number",
            "description": "Price of the product item. Total price and quantity must match with the \border.amount\b. Note If you are using KKI, all the symbols are not allowed. Ensure you do not put any symbol.",
            "example": 40000,
            "required": "Conditional, Mandatory for Payment Methods : Jenius, Kredivo, Akulaku, Indodana, KKI."
          },
          "sku": {
            "type": "string",
            "description": "SKU of the product item.",
            "example": "FF01",
            "required": "Conditional Mandatory for Payment Methods : Akulaku, Kredivo, Indodana."
          },
          "category": {
            "type": "string",
            "description": "Category of the product item.",
            "externalDocs": {
              "description": "For Indodana, the category should be based on these list.",
              "url": "https://developers.doku.com/accept-payment/doku-checkout/integration-guide/backend-integration#list-category"
            },
            "example": "gift-and-flowers",
            "required": "Conditional, Mandatory for Payment Methods : Akulaku, Kredivo, Indodana."
          },
          "url": {
            "type": "string",
            "description": "URL to the product item on merchant site. ",
            "example": "http://item-url.domain/",
            "required": "Conditional, Mandatory for Payment Methods : Kredivo and Indodana."
          },
          "image_url": {
            "type": "string",
            "description": "URL the image of the product item on merchant site.",
            "example": "http://image-url.domain/",
            "required": "Conditional, Mandatory for Payment Methods : Indodana."
          },
          "type": {
            "type": "string",
            "description": "Type of the item in this transaction.",
            "example": "ABC",
            "required": "Conditional, Mandatory for Payment Methods : Indodana."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error_messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Error messages detailing what went wrong.",
            "example": [
              "order.invoice_number must be filled",
              "order.amount must greater than 0"
            ]
          }
        }
      }
    }
  }
}
